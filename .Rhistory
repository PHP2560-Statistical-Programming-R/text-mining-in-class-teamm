install.packages("rtexttools")
install.packages("RTextTools")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(suppressWarnings(library(RTextTools)))
data("NYTimes")
str(NYTimes)
View(NYTimes)
??NYTimes
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(suppressWarnings(library(RTextTools)))
suppressMessages(suppressWarnings(library(dplyr)))
suppressMessages(suppressWarnings(library(tidytext)))
suppressMessages(suppressWarnings(library(TidyText)))
install.packages("tidytext")
suppressMessages(suppressWarnings(library(tidytext)))
words = inner_join(NYTimes$Title, get_sentiments("nrc"))
words = inner_join(as.string(NYTimes$Title), get_sentiments("nrc"))
words = inner_join(toString(NYTimes$Title), get_sentiments("nrc"))
words = inner_join(unnest_tokens(NYTimes$Title), get_sentiments("nrc"))
words = inner_join(unnest_tokens(toString(NYTimes$Title)), get_sentiments("nrc"))
words = inner_join(unnest_tokens(toString(NYTimes$Title)), get_sentiments("nrc"),by="word")
unnest_tokens(toString(NYTimes$Title))
?unnest_tokens
unnest_tokens(NYTimes)
unnest_tokens(NYTimes, word)
unnest_tokens(NYTimes, "word")
unnest_tokens(NYTimes, word, Title)
unnest_tokens(NYTimes, word, toString(Title))
unnest_tokens(NYTimes, word, as.character(Title))
as.character(NYTimes$Title)
unnest_tokens(NYTimes, word, as.character(Title))
NYTimes$Title = as.character(NYTimes$Title)
View(NYTimes)
unnest_tokens(NYTimes, word, Title)
test = unnest_tokens(NYTimes, word, Title)
View(test)
data("NYTimes")
NYTimes$Title = as.character(NYTimes$Title)
words = unnest_tokens(NYTimes, word, Title)
View(words)
data("NYTimes")
NYTimes$Title = as.character(NYTimes$Title)
words = unnest_tokens(NYTimes, word, Title)
sents = inner_join(words, get_sentiments("nrc"), by="word")
View(sents)
sents.nrc = inner_join(words, get_sentiments("nrc"), by="word")
sents.bing = inner_join(words, get_sentiments("bing"), by="word")
View(sents.nrc)
View(sents.bing)
?NYTimes
matrix <- create_matrix(cbind(as.vector(NYTimes$Title),as.vector(NYTimes$Subject)), language="english", removeNumbers=TRUE, stemWords=TRUE, weighting=weightTf)
install.packages("topicmodels")
suppressMessages(suppressWarnings(library(topicmodels)))
matrix <- create_matrix(cbind(as.vector(NYTimes$Title),as.vector(NYTimes$Subject)), language="english", removeNumbers=TRUE, stemWords=TRUE, weighting=weightTf)
matrix <- create_matrix(cbind(as.vector(NYTimes$Title),as.vector(NYTimes$Subject)), language="english")
View(matrix)
matrix
k <- length(unique(data$Topic.Code))
k <- length(unique(NYTimes$Topic.Code))
lda <- LDA(matrix, k)
terms(lda)
topics(lda)
View(topics(lda))
terms(lda)
?LDA
data("NYTimes")
NYTimes$Title = as.character(NYTimes$Title)
words = unnest_tokens(NYTimes, word, Title)
sents.nrc = inner_join(words, get_sentiments("nrc"), by="word")
sents.bing = inner_join(words, get_sentiments("bing"), by="word")
dim(sents.bing)[1]
dim(sents.bing)[2]
data("NYTimes")
NYTimes$Title = as.character(NYTimes$Title)
words = unnest_tokens(NYTimes, word, Title)
sents.nrc = inner_join(words, get_sentiments("nrc"), by="word")
sents.bing = inner_join(words, get_sentiments("bing"), by="word")
dim(sents.nrc)[1]
dim(sents.bing)[1]
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 2.5,-2.8)
mean(data)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
length(data)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(1000)*mean(sample(data-1.3, 11, replace=TRUE))
library(mosaic)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(1000)*mean(sample(data-1.3, 11, replace=TRUE))
mean(unlist(boot)>=1.3)
View(boot)
prop(~abs(mean)<1.3,data=boot)
prop(~abs(mean)>=1.3,data=boot)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(10000)*mean(sample(data-1.3, 11, replace=TRUE))
mean(boot>1.3)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(10000)*mean(sample(data, 11, replace=TRUE)-1.3)
mean(boot>1.3)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(10000)*mean(sample(data, 11, replace=TRUE)-1.3)
mean(boot>1.3)
data = c(0.6,4.7,3.8,0.4,1.5,-1.2,2.8,-0.4,1.4, 3.5,-2.8)
mean(data)
boot = do(100000)*mean(sample(data, 11, replace=TRUE)-1.3)
boot2 = do(100000)*mean(sample(data-1.3, 11, replace=TRUE))
ks.test(boot, boot2)
ks.test(unlist(boot), unlist(boot2))
mydata= data.frame(1:11, data-1.3)
names(mydata)
null=data-1.3
null=data-1.3
mydata= data.frame(1:11, null)
randnull=do(4000)*mean(~null, data=resample(mydata))
sum(randnull$mean>=1.3)/length(randnull$mean)
mean(dat)
mean(data)
mean(data, digits=5)
mean(data, digits=1)
mean(data, digits=0)
mean(data*1000, digits=0)
mean(data*100000, digits=0)
set.seed(.99999)
mean(rnorm(5))
set.seed(.99998)
mean(rnorm(5))
set.seed(.98999)
mean(rnorm(5))
set.seed(.59998)
mean(rnorm(5))
set.seed(.49998)
mean(rnorm(5))
set.seed(1.49998)
mean(rnorm(5))
set.seed(1.29998)
mean(rnorm(5))
x=rgamma(10000)
x=rgamma(10000,1)
mean(1/x)
1/mean(x)
x= vector(length=100000)
for(i in 1:100000){
z=rbinom(1,1,2/3)
x[i] = ifelse(z, rnorm(1,5,2), rnorm(1,2,5))
}
sd(x)^2
2/3*5+(1/3)*2+3^2*(2/3)*(1/3)
2/3*4+(1/3)*25+3^2*(2/3)*(1/3)
?rgamma
alp=3
bet=4
p=2/3
x=vector(length=100000)
for(i in 1:length(x)){
z=rgamma(1, shape=alp, scale=bet)
y=rpois(1, z)
x[i]=rbinom(1, y, p)
}
sd(x)^2
p*alp*bet(1-p+p*(2+bet))
p*alp*bet*(1-p+p*(2+bet))
?rpois
p*(1-p)*alp*bet+p^2*alp*bet*(2+bet)
p*(1-p)*alp*bet+p^2*alp*bet*(1+2*bet)
p*alp*bet(1-p+p*(2+bet))
p*alp*bet*(1-p+p*(2+bet))
p*alp*bet*(1-p+p*(1+2*bet))
alp=3
bet=4
p=2/3
x=vector(length=100000)
z=x
y=z
for(i in 1:length(x)){
z[i]=rgamma(1, shape=alp, scale=bet)
y[i]=rpois(1, z[i])
x[i]=rbinom(1, y[i], p)
}
mean(y)
sd(y)^2
alp*bet*(1+2*bet)
sd(x)^2
p*alp*bet*(1-p+p*bet*(alp+2))
sd(y)^2
alp*bet*bet(alp+2)
alp*bet*bet*(alp+2)
mean(z)
sd(z)^2
mean(y)
hist(y)
sd(y)^2
alp*bet*(1+bet)
p*(1-p)*alp*bet+p^2*(alp*bet)*(1+bet)
sd(x)^2
mu0 = 3
sig0=2
alp=5
bet = 7
x=vector(length=10000)
mu=x
sig=x
for(i in 1:length(x)){
mu0=rnorm(1, mu0, sig0)
sig0=rgamma(1, shape=alp,scale=bet)
}
mean(x)
mu0 = 3
sig0=2
alp=5
bet = 7
x=vector(length=10000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
sig=rgamma(1, shape=alp,scale=bet)
x[i] = rnorm(1, mu, sig)
}
mean(x)
hist(x)
mu0 = 3
sig0=2
alp=5
bet = 7
x=vector(length=10000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
sig=sqrt(rgamma(1, shape=alp,scale=bet))
x[i] = rnorm(1, mu, sig)
}
mean(x)
sd(x)
mu0 = 3
sig0=2
alp=5
bet = 7
x=vector(length=10000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
sig=sqrt(rgamma(1, shape=alp,scale=bet))
x[i] = rnorm(1, mu, sig)
}
mean(x)
mu0 = 3
sig0=2
alp=5
bet = 7
x=vector(length=100000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
sig=sqrt(rgamma(1, shape=alp,scale=bet))
x[i] = rnorm(1, mu, sig)
}
mean(x)
sd(x)^2
alp*bet+sig0^2
mu0 = 3
sig0=2
alp=5
a = 7
x=vector(length=100000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
bet=rexp(1, 7)
sig=sqrt(rgamma(1, shape=alp,scale=bet))
x[i] = rnorm(1, mu, sig)
}
mean(x)
sd(x)^2
alp*a+sig0^2
a
alp
sig0
39/(alp*a+sig0^2)
39/sd(x)^2
?rexp
mu0 = 3
sig0=2
alp=5
a = 7
x=vector(length=100000)
mu=x
sig=x
for(i in 1:length(x)){
mu=rnorm(1, mu0, sig0)
bet=rexp(1, 1/a)
sig=sqrt(rgamma(1, shape=alp,scale=bet))
x[i] = rnorm(1, mu, sig)
}
mean(x)
sd(x)^2
install.packages("rmutil")
library(rmutil)
?rpareto
the = runif(10000, -1, 1)
r=runif(10000, 0, 1)
x=r*cos(the)
y=r*sin(the)
z=x/y
hist(z)
?rcauchy
ks.test(z, pcauchy)
ks.test(z, pcauchy(scale=1/3.14159))
c=rcauchy(10000, scale=1/pi)
pi
ks.test(z,c)
c=rcauchy(10000, scale=pi)
ks.test(z,c)
plot(x,y)
the=runif(10000, 0, 2*pi)
x=r*cos(the)
y=r*sin(the)
plot(x,y)
z=x/y
plot(z)
hist(z)
ks.test(z, pcauchy())
ks.test(z, pcauchy)
?rchisq
x=rpois(10)
x=rpois(10000,10)
y=rchisq(1, x+1)
length(y)
y=rchisq(length(x), x+1)
hist(y)
mean(y)
sd(y)^2
is.equal(0.1+0.1, .2)
all.equal(0.1+0.1, .2)
identical(.1+.1, .2)
2^54
2^54+1-2^54
2^53+1-2^53
2^52+1-2^52
x=c(1,2,3)
c(x, 4)
c(x-2)
myData=c(0.6,4.7,3.8,.4,1.5,-1.2,2.8,-.4,1.4,3.5,-2.8)
mean(myData)
library(mosaic)
randH0=c(myData-1.3)
mean(randH0)
bootstrapH0=do(1000)*mean(resample(randH0))
hist(exp(runif(1000)))
hist(exp(-2*runif(1000)))
hist(-2*log(runif(1000)))
ks.test(-2*log(runif(1000)), pexp)
ks.test(-log(runif(1000)), pexp)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 1:(m-1)){
if(x[i,j+1]) bfh=c(bfh, x[i,j])
}
}
mean(bfh)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 1:(n-1)){
if(x[i,j+1]) bfh=c(bfh, x[i,j])
}
}
mean(bfh)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 2:n){
if(x[i,j-1]) bfh=c(bfh, x[i,j])
}
}
mean(bfh)
rep <- 1e6
n <- 4
data <- array(sample(c(0,1), rep*n, replace=TRUE), c(rep,n))
prob <- rep(NA, rep)
for (i in 1:rep){
heads1 <- data[i,1:(n-1)]==1
heads2 <- data[i,2:n]==1
prob[i] <- sum(heads1 & heads2)/sum(heads1)
}
rep <- 1e4
n <- 4
data <- array(sample(c(0,1), rep*n, replace=TRUE), c(rep,n))
prob <- rep(NA, rep)
for (i in 1:rep){
heads1 <- data[i,1:(n-1)]==1
heads2 <- data[i,2:n]==1
prob[i] <- sum(heads1 & heads2)/sum(heads1)
}
mean(prob, na.rm=T)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 2:n){
if(x[i,j-1]==1) bfh=c(bfh, x[i,j])
}
}
mean(bfh)
mean(x)
unique(x)
dim(x)
View(x)
View(data)
rep <- 1e4
n <- 4
data <- array(sample(c(0,1), rep*n, replace=TRUE), c(rep,n))
prob <- rep(NA, rep)
for (i in 1:rep){
heads1 <- data[i,1:(n-1)]==1
heads2 <- data[i,2:n]==1
prob[i] <- sum(heads1 & heads2)/sum(heads1)
}
mean(prob, na.rm=T)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 2:n){
if(x[i,j-1]==1) bfh=c(bfh, x[i,j])
}
}
mean(bfh)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = c()
for(i in 1:m){
for(j in 2:n){
if(x[i,j-1]==1) {
bfh=c(bfh, x[i,j])
}
}
}
mean(bfh)
hist(prob)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = rep(NA, m)
for(i in 1:m){
temp = c()
for(j in 2:n){
if(x[i,j-1]==1) {
temp=c(temp, x[i,j])
}
bfh[i] = mean(temp)
}
}
mean(bfh)
warnings()
length(c())
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = rep(NA, m)
for(i in 1:m){
temp = c()
for(j in 2:n){
if(x[i,j-1]==1) temp=c(temp, x[i,j])
if (length(temp>0) bfh[i] = mean(temp)
}
}
mean(bfh)
m=10000
n=4
x=matrix(rbinom(m*n, 1, .5), nrow=m, ncol=n)
bfh = rep(NA, m)
for(i in 1:m){
temp = c()
for(j in 2:n){
if(x[i,j-1]==1) temp=c(temp, x[i,j])
if (length(temp>0)) bfh[i] = mean(temp)
}
}
mean(bfh)
mean(bfh, na.rm=T)
Sys.getenv("PATH")
system('g++ -v')
system('where make')
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
library(rstan)
